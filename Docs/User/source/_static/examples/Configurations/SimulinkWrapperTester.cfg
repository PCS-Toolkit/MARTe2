
+MDSParameters = {
 Class=MDSObjLoader
 Shot=-1
 /*
 +Connection_tcvdata_tcv_shot_vista = {
  Class=MDSObjConnection
  Server=tcvdata
  Tree=tcv_shot
  +SCDnode02_tp-ADCgains-RVLOOP_gains                 = { Class=MDSParVector                   Path="mag_live_gains('RVLOOP','GAIN')"        }
 }
 */
 +Connection_tcvdata_tcv_shot = {
  Class=MDSObjConnection
  Server=tcvdata
  Tree=tcv_shot
  +SCDnode02_tp-ADCgains-Ain_gains                    = { Class=MDSParVector                   Path="\\hybrid::mat_a_in_scale"               }
  +SCDnode02_tp-ADCgains-DML_gain1                    = { Class=MDSParScalar                   Path="dml_live_gains('VLOOP','DCL1COIL')"     }
  +SCDnode02_tp-ADCgains-DML_gain2                    = { Class=MDSParScalar                   Path="dml_live_gains('VLOOP','DBRIPPLECOIL')" }
  +SCDnode02_tp-ADCgains-DML_gain3                    = { Class=MDSParScalar                   Path="dml_live_gains('FLUX','CLCOIL')"        }
  +SCDnode02_tp-ADCgains-DML_gain4                    = { Class=MDSParScalar                   Path="dml_live_gains('FLUX','DML2AMPF')"      }
  +SCDnode02_tp-ADCgains-RVLOOP_gains                 = { Class=MDSParVector                   Path="mag_live_gains('RVLOOP','GAIN')"        }
  +SCDnode02_tp-DACgains-OUT_scale_e_u                = { Class=MDSParScalar                   Path="\\hybrid::output_scales_e_u"            }
  +SCDnode02_tp-DACgains-OUT_scale_f_u                = { Class=MDSParScalar                   Path="\\hybrid::output_scales_f_u"            }
  +SCDnode02_tp-DACgains-OUT_scale_oh_u               = { Class=MDSParScalar                   Path="\\hybrid::output_scales_oh_u"           }
  +SCDnode02_tp-DACgains-OUT_scale_gas                = { Class=MDSParScalar                   Path="\\hybrid::output_scales_gas"            }
  +SCDnode02_tp-DACgains-OUT_scale_fast_u             = { Class=MDSParScalar                   Path="\\hybrid::output_scales_fast_u"         }
  +SCDnode02_tp-DACgains-OUT_scale_e_i                = { Class=MDSParScalar                   Path="\\hybrid::output_scales_e_i"            }
  +SCDnode02_tp-DACgains-OUT_scale_f_i                = { Class=MDSParScalar                   Path="\\hybrid::output_scales_f_i"            }
  +SCDalgo_02stddiag_tp-ADCpre-T_F_R                  = { Class=MDSParMatrix                   Path="\\MAGNETICS::VIRT.T_F_R"                }
  +SCDalgo_02stddiag_tp-ADCpre-t_start_bphi           = { Class=MDSParScalar                   Path="vdbget('powerdb::shot_design:bphi_start_ref')" }
  +SCDalgo_02stddiag_tp-ADCpre-t_start_bpol           = { Class=MDSParScalar                   Path="vdbget('powerdb::shot_design:pol_start_ref')" }
  +SCDalgo_02stddiag_tp-DMLpre-c_fix_tor_nonlin       = { Class=MDSParScalar                   Path="\\results::dmlbo002:c"                  }
  +SCDalgo_02stddiag_tp-DMLpre-c_fix_tor_diff         = { Class=MDSParScalar                   Path="\\results::dmlbo004:c"                  }
  +SCDalgo_02stddiag_tp-DMLpre-p_var_tor_ferro        = { Class=MDSParScalar                   Path="\\results::dmlbo005:p"                  }
  +SCDalgo_02stddiag_tp-DMLpre-c_fix_pol_lin          = { Class=MDSParVector                   Path="\\results::dmlbo006:c"                  }
  +SCDalgo_02stddiag_tp-DMLpre-c_fix_def              = { Class=MDSParVector                   Path="\\results::dmlbo007:c"                  }
  +SCDalgo_02stddiag_tp-DMLpre-c_fix_pol_vessel       = { Class=MDSParVector                   Path="\\results::dmlbo008:c"                  }
  +SCDalgo_hybrid_tp-A_matrix                         = { Class=MDSParMatrix                   Path="\\pcs::phys_mat_a"                      }
  +SCDalgo_hybrid_tp-M_matrix                         = { Class=MDSParMatrix                   Path="\\pcs::phys_mat_m"                      }
  +SCDalgo_hybrid_tp-G1_matrix                        = { Class=MDSPar3DMatrix                 Path="\\pcs::phys_mat_g1"                     }
  +SCDalgo_hybrid_tp-G2_matrix                        = { Class=MDSPar3DMatrix                 Path="\\pcs::phys_mat_g2"                     }
  +SCDalgo_hybrid_tp-G3_matrix                        = { Class=MDSPar3DMatrix                 Path="\\pcs::phys_mat_g3"                     }
  +SCDalgo_hybrid_tp-G_time                           = { Class=MDSParFixDimVector             Path="dim_of(\\pcs::phys_mat_addresses:G)"    Dim=50 }
  +SCDalgo_hybrid_tp-G_order                          = { Class=MDSParFixDimVectorInt          Path="\\pcs::phys_mat_addresses:G"            Dim=50 }
  +SCDalgo_hybrid_tp-WG_start_time                    = { Class=MDSParFixDimVectorIdx          Path="dim_of(\\\\draw_refs:ref_%03d)[0]"      StartIdx=1 StopIdx=24 }
  +SCDalgo_hybrid_tp-mgams-mvloop                     = { Class=MDSParScalarInt                Path="\\pcs::mgams.data:mvloop"               }
  +SCDalgo_hybrid_tp-mgams-ierat                      = { Class=MDSParScalarInt                Path="\\pcs::mgams.data:ierat"                }
  +SCDalgo_hybrid_tp-mgams-ikriz                      = { Class=MDSParScalarInt                Path="\\pcs::mgams.data:ikriz"                }
  +SCDalgo_hybrid_tp-mgams-inova                      = { Class=MDSParScalarInt                Path="\\pcs::mgams.data:inova"                }
  +SCDalgo_hybrid_tp-mgams-nfast                      = { Class=MDSParScalarInt                Path="\\pcs::mgams.data:nfast"                }
  +SCDalgo_hybrid_tp-ensignbits                       = { Class=MDSParScalarInt                Path=""                                       }
  +SCDalgo_hybrid_tp-endigdens1                       = { Class=MDSParScalarInt                Path=""                                       }
  +SCDalgo_signbits_tp-A_matrix                       = { Class=MDSParMatrix                   Path="\\pcs::phys_mat_a"                      }
  +SCDalgo_digdensityctrl1_tp-dneon                   = { Class=MDSParScalarInt                Path="\\pcs::mgams.data:dneon"                }
  +SCDalgo_digdensityctrl1_tp-dnekp                   = { Class=MDSParScalar                   Path="\\pcs::mgams.data:dnekp"                }
  +SCDalgo_digdensityctrl1_tp-dneki                   = { Class=MDSParScalar                   Path="\\pcs::mgams.data:dneki"                }
  +SCDalgo_digdensityctrl1_tp-dnekd                   = { Class=MDSParScalar                   Path="\\pcs::mgams.data:dnekd"                }
  +SCDalgo_digdensityctrl1_tp-dneka                   = { Class=MDSParScalar                   Path="\\pcs::mgams.data:dneka"                }
  +SCDalgo_digdensityctrl1_tp-dnefil                  = { Class=MDSParScalar                   Path="\\pcs::mgams.data:dnefil"               }
  +SCDalgo_digdensityctrl1_tp-dnemode                 = { Class=MDSParScalarInt                Path="\\pcs::mgams.data:dnemode"              }
  +SCDalgo_digdensityctrl1_tp-dnescal1                = { Class=MDSParScalar                   Path="\\pcs::mgams.data:dnescal1"             }
  +SCDalgo_digdensityctrl1_tp-dnescal2                = { Class=MDSParScalar                   Path="\\pcs::mgams.data:dnescal2"             }
  +SCDalgo_digdensityctrl1_tp-dne1mm                  = { Class=MDSParScalar                   Path=""                                       }
  +SCDalgo_digdensityctrl1_tp-dnetlh                  = { Class=MDSParScalar                   Path=""                                       } 
  //+tptest                  			      = { Class=MDSParSAMStructure                Path="sam.tptruct"                                       } 
}
 +Connection_scd={
  Class=MDSObjConnection
  Server=scd
  Tree=rtcalgo
  Shot=0
  +SCDalgo_hybrid_tp-ipoffsetsub-activate             = { Class=MDSParScalarBool               Path="hybrid.params.ipoffsetsub.activate"     }
  +SCDalgo_hybrid_tp-ipoffsetsub-mean_window          = { Class=MDSParVector                   Path="hybrid.params.ipoffsetsub.mean_window"  }
  +SCDalgo_hybrid_tp-ipoffsetsub-t_start              = { Class=MDSParScalar                   Path="hybrid.params.ipoffsetsub.t_start"      }
  +SCDalgo_hybrid_tp-adapipcstart-activate            = { Class=MDSParScalarBool               Path="hybrid.params.adapipcstart.activate"    }
  +SCDalgo_hybrid_tp-adapipcstart-ip_th               = { Class=MDSParScalar                   Path="hybrid.params.adapipcstart.ip_th"       }
  +SCDalgo_hybrid_tp-adapipcstart-ip_th_window        = { Class=MDSParVector                   Path="hybrid.params.adapipcstart.ip_th_window" }
  +SCDalgo_hybrid_tp-adapipcstart-tau_bumpless        = { Class=MDSParVector                   Path="hybrid.params.adapipcstart.tau_bumpless" }  
 }
}


$TestApp = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer
        +GAMTimer = {
            Class = IOGAM
            InputSignals = {
                Counter = 	{ 				DataSource = Timer Type = uint32 }                
                Time 	= 	{ Frequency = 1 DataSource = Timer Type = uint32 }
            }
            OutputSignals = {
                Counter = {                 DataSource = DDB1  Type = uint32 }                
                Time = {                	DataSource = DDB1  Type = uint32 }            
            }
        }
        
        
	    +Constants = {
	     Class = ConstantGAM
	     OutputSignals = {
				realtime	= { DataSource = DDB1 Type = float32  NumberOfElements = 1   NumberOfDimensions=1 }
            	adc  		= { DataSource = DDB1 Type = int16    NumberOfElements = 192 NumberOfDimensions=1 }
				rfm_in      = { DataSource = DDB1 Type = uint8    NumberOfElements = 984 NumberOfDimensions=1  }
				wavegen     = { DataSource = DDB1 Type = float32  NumberOfElements = 63  NumberOfDimensions=1 }
				proc_in     = { DataSource = DDB1 Type = float32    NumberOfElements = 138   NumberOfDimensions=1  }
 				ethcat1_in  = { DataSource = DDB1 Type = uint8    NumberOfElements = 80  NumberOfDimensions=1  }				     
	     }
	    }

		+GAMSimulink1 = {
 			Class = SimulinkWrapperGAM
			//Library = "/root/scd/simulinkcodegen/tests/SCDwrap_f4eexample.so"
			//Library = "/root/scd/simulinkcodegen/tests/SCD_rtccode_02_02.so"
			Library = "/root/scd/simulinkcodegen/tests/SCD_rtccode_02_04.so"
			//Library = "/root/scd/simulinkcodegen/1005/SCD_rtccode_02_02.so"
			//Library = "/root/scd/simulinkcodegen/1006/SCD_rtccode_02_02.so"
			
			//SymbolPrefix = "SCD_rtccode_02_02"
			SymbolPrefix = "SCD_rtccode_02_04"
			//SymbolPrefix = "SCDwrap_f4eexample"
			Verbosity = 2
			TunParSourceGAM = MDSParameters
			SkipNotOkTunParams = 1
			InputSignals = {		
				realtime	= { DataSource = DDB1 Type = float32  NumberOfElements = 1   CheckSimulinkType = true  NumberOfDimensions=1 }
            	adc  		= { DataSource = DDB1 Type = int16    NumberOfElements = 192 CheckSimulinkType = true  NumberOfDimensions=1 }
				rfm_in      = { DataSource = DDB1 Type = uint8    NumberOfElements = 984 CheckSimulinkType = false NumberOfDimensions=1 }
				wavegen     = { DataSource = DDB1 Type = float32  NumberOfElements = 63  CheckSimulinkType = true  NumberOfDimensions=1 }
				proc_in     = { DataSource = DDB1 Type = float32    NumberOfElements = 138 CheckSimulinkType = false NumberOfDimensions=1   }
 				ethcat1_in  = { DataSource = DDB1 Type = uint8    NumberOfElements = 80  CheckSimulinkType = false NumberOfDimensions=1 }			
 			}
 			OutputSignals = { 
				dac			= { DataSource = DDB1 Type = int16    NumberOfElements = 64  CheckSimulinkType = true  NumberOfDimensions=1 }		
				mem         = { DataSource = DDB1 Type = uint8    NumberOfElements = 156  CheckSimulinkType = false  NumberOfDimensions=1 }				
				DO          = { DataSource = DDB1 Type = uint8    NumberOfElements = 4   CheckSimulinkType = true  NumberOfDimensions=1 }
				rfm_out     = { DataSource = DDB1 Type = uint8    NumberOfElements = 640 CheckSimulinkType = false NumberOfDimensions=1 }
				proc_out    = { DataSource = DDB1 Type = float32    NumberOfElements = 136   CheckSimulinkType = false NumberOfDimensions=1 }
 				ethcat1_out = { DataSource = DDB1 Type = uint8    NumberOfElements = 80   CheckSimulinkType = false NumberOfDimensions=1 }			
			}
			//+SimulinkReadyMsg = { Class = Message Destination = RTApp.Data.MDSWriter1 Function = SetupBusSignals Mode = ExpectsReply +Parameters = { Class = ConfigurationDatabase param1 = RTApp.Functions.GAMSimulink1 } }			
		}
		
		/*
		
        +TestSignals2 = {
        	Class = HelperGAM1
        	        	
        	MdsTimeOffset = 0
        	MdsStartTime = -4495000
        	MdsStopTime = 3950000
        	
        	InputSignals = { 
        		Time  = 		{ DataSource = DDB1     Type = uint32 }
        	}
        	OutputSignals = {
				realtime			= { DataSource = DDB2 Type = float32  NumberOfElements = 1    }   	
            	dummyadc  			= { DataSource = DDB2 Type = int16    NumberOfElements = 192  NumberOfDimensions = 1 }
				rfm_in_dummy      	= { DataSource = DDB2 Type = uint8    NumberOfElements = 984  NumberOfDimensions = 1 }
				wavegen     		= { DataSource = DDB2 Type = float32  NumberOfElements = 62   NumberOfDimensions = 1 }
				proc_in     		= { DataSource = DDB2 Type = float32  NumberOfElements = 3    NumberOfDimensions = 1 }
				offsettimeforMDS	= { DataSource = DDB2 Type = int32 	  NumberOfElements = 1    }
		  		triggerforMDS 		= { DataSource = DDB2 Type = uint8    NumberOfElements = 1    }
                DOs 				= { DataSource = DDB2 Type = uint8    NumberOfElements = 4    NumberOfDimensions = 1 }
                PWMduty 			= { DataSource = DDB2 Type = uint16   NumberOfElements = 8    NumberOfDimensions = 1 }  
        	}
        }
        +Dummy2 = {
        	Class = IOGAM
        	InputSignals = {
        		rfm_in_dummy       = { DataSource = DDB2 Type = uint8    NumberOfElements = 984  }
        		rfm_in_dummy2      = { DataSource = DDB2 Type = uint8    NumberOfElements = 984 Ranges = {{0,459}} Alias = rfm_in_dummy }
        		rfm_in_dummy3      = { DataSource = DDB2 Type = uint8    NumberOfElements = 984 Ranges = {{0,3}} Alias = rfm_in_dummy }
        	
        	}
        	OutputSignals = {
        	    proc_in_dummy      = { DataSource = DDB2 Type = uint8 NumberOfElements = 1444 }
        	    dummywavegen       = { DataSource = DDB2 Type = float32 NumberOfElements = 1 }
        	}
        }
		+GAMSimulink2 = {
 			Class = SimulinkWrapperGAM
			Library = "/home/dt100/simulinkcodegen/1010/SCD_rtccode_02_03.so"
			SymbolPrefix = "SCD_rtccode_02_03"
			Verbosity = 2
			TunParSourceGAM = MDSParameters
			SkipNotOkTunParams = 1
			InputSignals = {		
				realtime	= { DataSource = DDB2 Type = float32  NumberOfElements = 1   CheckSimulinkType = true  NumberOfDimensions=1 }
				wavegen     = { DataSource = DDB2 Type = float32  NumberOfElements = 1   CheckSimulinkType = true  NumberOfDimensions=1 Alias = dummywavegen}
				proc_in     = { DataSource = DDB2 Type = uint8    NumberOfElements = 1444 CheckSimulinkType = false NumberOfDimensions=1 Alias = proc_in_dummy }
 			}
 			OutputSignals = { 
				mem         = { DataSource = DDB2 Type = uint8    NumberOfElements = 1452  CheckSimulinkType = false  NumberOfDimensions=1 }				
				proc_out    = { DataSource = DDB2 Type = float32    NumberOfElements = 34   CheckSimulinkType = false NumberOfDimensions=1 }
			}
			//+SimulinkReadyMsg = { Class = Message Destination = RTApp.Data.MDSWriter1 Function = SetupBusSignals Mode = ExpectsReply +Parameters = { Class = ConfigurationDatabase param1 = RTApp.Functions.GAMSimulink1 } }			
		}
 		

		
        +TestSignals3 = {
        	Class = HelperGAM1
        	        	
        	MdsTimeOffset = 0
        	MdsStartTime = -4495000
        	MdsStopTime = 3950000
        	
        	InputSignals = { 
        		Time  = 		{ DataSource = DDB1     Type = uint32 }
        	}
        	OutputSignals = {
				realtime			= { DataSource = DDB3 Type = float32  NumberOfElements = 1    }   	
            	dummyadc  			= { DataSource = DDB3 Type = int16    NumberOfElements = 192  NumberOfDimensions = 1 }
				rfm_in_dummy      	= { DataSource = DDB3 Type = uint8    NumberOfElements = 984  NumberOfDimensions = 1 }
				wavegen     		= { DataSource = DDB3 Type = float32  NumberOfElements = 62   NumberOfDimensions = 1 }
				proc_in     		= { DataSource = DDB3 Type = float32  NumberOfElements = 3    NumberOfDimensions = 1 }
				offsettimeforMDS	= { DataSource = DDB3 Type = int32 	  NumberOfElements = 1    }
		  		triggerforMDS 		= { DataSource = DDB3 Type = uint8    NumberOfElements = 1    }
                DOs 				= { DataSource = DDB3 Type = uint8    NumberOfElements = 4    NumberOfDimensions = 1 }
                PWMduty 			= { DataSource = DDB3 Type = uint16   NumberOfElements = 8    NumberOfDimensions = 1 }  
        	}
        }
        +Dummy3 = {
        	Class = IOGAM
        	InputSignals = {
        		rfm_in_dummy       = { DataSource = DDB3 Type = uint8    NumberOfElements = 984  }
        		rfm_in_dummy2      = { DataSource = DDB3 Type = uint8    NumberOfElements = 984 Ranges = {{0,459}} Alias = rfm_in_dummy }
        		rfm_in_dummy3      = { DataSource = DDB3 Type = uint8    NumberOfElements = 984 Ranges = {{0,3}} Alias = rfm_in_dummy }
        	}
        	OutputSignals = {
        	    proc_in_dummy      = { DataSource = DDB3 Type = uint8 NumberOfelements = 1444 }
        	    dummywavegen       = { DataSource = DDB3 Type = float32 NumberOfElements = 1 }
        	}
        }
		+GAMSimulink3 = {
 			Class = SimulinkWrapperGAM
			Library = "/home/dt100/simulinkcodegen/1010/SCD_rtccode_02_04.so"
			SymbolPrefix = "SCD_rtccode_02_04"
			Verbosity = 2
			TunParSourceGAM = MDSParameters
			SkipNotOkTunParams = 1
			InputSignals = {		
				realtime	= { DataSource = DDB3 Type = float32  NumberOfElements = 1   CheckSimulinkType = true  NumberOfDimensions=1 }
				wavegen     = { DataSource = DDB3 Type = float32  NumberOfElements = 1   CheckSimulinkType = true  NumberOfDimensions=1 Alias = dummywavegen}
				proc_in     = { DataSource = DDB3 Type = uint8    NumberOfElements = 1444 CheckSimulinkType = false NumberOfDimensions=1 Alias = proc_in_dummy }
 			}
 			OutputSignals = { 
				mem         = { DataSource = DDB3 Type = float32    NumberOfElements = 100  CheckSimulinkType = false  NumberOfDimensions=1 }				
				proc_out    = { DataSource = DDB3 Type = float32    NumberOfElements = 11   CheckSimulinkType = false NumberOfDimensions=1 }
			}
			//+SimulinkReadyMsg = { Class = Message Destination = RTApp.Data.MDSWriter1 Function = SetupBusSignals Mode = ExpectsReply +Parameters = { Class = ConfigurationDatabase param1 = RTApp.Functions.GAMSimulink1 } }			
		}
		*/
	

    }
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB1
        +DDB1 = { Class = GAMDataSource }    
        +DDB2 = { Class = GAMDataSource }    
        +DDB3 = { Class = GAMDataSource }    
            
        +LoggerDataSource = { Class = LoggerDataSource }
        +Timings = { Class = TimingDataSource }
        +Timer = {
            Class = LinuxTimer
            SleepNature = "Default"
            Signals = {
                Counter = { Type = uint32 }
                Time = { Type = uint32 }
            }
        }        
    }
    +States = {
        Class = ReferenceContainer
        +State1 = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread 
                    CPUs = 0x1 
                    Functions = {
                      
                      GAMTimer                         	      
                      Constants
                      GAMSimulink1
                      
		              /*   
                      TestSignals2
                      Dummy2
                      GAMSimulink2
                      
                      TestSignals3
                      Dummy3
                      GAMSimulink3
                      */
                        
                                            
                    }
                }
            }
        }        
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}
