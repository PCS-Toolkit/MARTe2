/*+TCPMessageProxy = {
    Class = TCPSocketMessageProxyExample
    Port = 24680
}
*/
$TestApp = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer
        +GAMInput = {
            Class = IOGAM
            InputSignals = {
                Counter = 		{ DataSource = AFHBA404 Type = uint32 }
                Time =    		{ DataSource = AFHBA404 Type = uint32 Frequency = 1000 }
                ADCinputs = 	{ DataSource = AFHBA404 Type = int16 NumberOfElements = 192 } 
            }
            OutputSignals = {
                Counter = 		{ DataSource = DDB1     Type = uint32 }                
                Time = 			{ DataSource = DDB1     Type = uint32 }            
                ADCinputs = 	{ DataSource = DDB1     Type = int16 NumberOfElements = 192 }                 
            }
        }
        /*
        +GAMFixed1 = {
            Class = FixedGAMExample1
            Gain = 2
            InputSignals = {
                Counter = {       DataSource = DDB1  Type = uint32 }
            }
            OutputSignals = {
                DiffCounter = {   DataSource = DDB1  Type = uint32 }                
            }
        }
	*/

        +GAMFixed1 = {
            Class = FixedGAMExample1
            Gain = 2
            InputSignals = {
                Counter = {       DataSource = DDB1  Type = uint32 }
                ADCinputs = {     DataSource = DDB1  Type = int16 NumberOfElements = 192 }
            }
            OutputSignals = {
                DiffCounter = {   DataSource = DDB1  Type = uint32 }                
           		DACs = {          DataSource = DDB1  Type = int16 NumberOfElements = 64 }
                DOs = {           DataSource = DDB1  Type = uint8 NumberOfElements = 4 }
                PWMduty = {       DataSource = DDB1  Type = uint16 NumberOfElements = 8 } 
            }
        }

        +GAMT1TSynchOut = {
            Class = IOGAM
            InputSignals = {
                ADCinputs = {		DataSource = DDB1			Type = int16 NumberOfElements = 192 }
            }
            OutputSignals = {
                ADCinputs = {		DataSource = RTThreadSynch	Type = int16 NumberOfElements = 192 }
            }
        }

        +GAMT1T2Interface = {
            Class = IOGAM
            InputSignals = {
                ADCinputs = {		DataSource = RTThreadSynch	Type = int16 NumberOfElements = 192 Samples = 10 }
            }
            OutputSignals = {
                ADCinputsT2 = {		DataSource = DDB1			Type = int16 NumberOfElements = 1920 Samples = 1 }
            }
        }

        +GAMT2TSynchOut = {
            Class = IOGAM
            InputSignals = {
                ADCinputsT2 = {		DataSource = DDB1			Type = int16 NumberOfElements = 1920 }
            }
            OutputSignals = {
                ADCinputsT2 = {		DataSource = RTThreadSynch2	Type = int16 NumberOfElements = 1920 }
            }
        }

        +GAMT2T3Interface = {
            Class = IOGAM
            InputSignals = {
                ADCinputsT2 = {		DataSource = RTThreadSynch2	Type = int16 NumberOfElements = 1920 Samples = 10 }
            }
            OutputSignals = {
                ADCinputsT3 = {		DataSource = DDB1			Type = int16 NumberOfElements = 19200 Samples = 1 }
            }
        }
        
        +GAMT2T4Interface = {
            Class = IOGAM
            InputSignals = {
                ADCinputsT2 = {		DataSource = RTThreadSynch2	Type = int16 NumberOfElements = 1920 Samples = 10 }
            }
            OutputSignals = {
                ADCinputsT4 = {		DataSource = DDB1			Type = int16 NumberOfElements = 19200 Samples = 1 }
            }
        }
         
        +MDSBroker = {
            Class = IOGAM            
            InputSignals = {
                Counter = {		  					DataSource = DDB1  		Type = uint32  } 
	            State1_Thread1_CycleTime = {		DataSource = Timings 	Type = uint32 	Alias = State1.Thread1_CycleTime }
	            State1_Thread2_CycleTime = {		DataSource = Timings 	Type = uint32 	Alias = State1.Thread2_CycleTime }
	            State1_Thread3_CycleTime = {		DataSource = Timings 	Type = uint32 	Alias = State1.Thread3_CycleTime }
	            State1_Thread4_CycleTime = {		DataSource = Timings 	Type = uint32 	Alias = State1.Thread4_CycleTime }
            	DiffCounter = {						DataSource = DDB1		Type = uint32  }
            	ADC1T1 = {							DataSource = DDB1		Type = int16	Alias = ADCinputs Ranges = {{0,0}} }
//            	ADC1T2 = {							DataSource = DDB1       Type = int16    Alias = ADCinputsT2 Ranges = {{0,0}} }
            	ADC1T2 = {							DataSource = DDB1       Type = int16    Alias = ADCinputsT2 Ranges = {{1728,1728}} }
//            	ADC1T3 = {							DataSource = DDB1       Type = int16    Alias = ADCinputsT3 Ranges = {{0,0}} }
            	ADC1T3 = {							DataSource = DDB1       Type = int16    Alias = ADCinputsT3 Ranges = {{17280,17280}} }
            	ADC1T4 = {							DataSource = DDB1       Type = int16    Alias = ADCinputsT4 Ranges = {{17280,17280}} }

            	ADC32T1 = {							DataSource = DDB1		Type = int16	Alias = ADCinputs Ranges = {{0,0}} }
            	ADC32T2 = {							DataSource = DDB1       Type = int16    Alias = ADCinputsT2 Ranges = {{0,0}} }
            	ADC32T3 = {							DataSource = DDB1       Type = int16    Alias = ADCinputsT3 Ranges = {{0,0}} }
            	ADC32T4 = {							DataSource = DDB1       Type = int16    Alias = ADCinputsT4 Ranges = {{0,0}} }

/*            	
            	ADC32T1 = {							DataSource = DDB1		Type = int16	Alias = ADCinputs Ranges = {{31,31}} }
            	ADC32T2 = {							DataSource = DDB1       Type = int16    Alias = ADCinputsT2 Ranges = {{31,31}} }
            	ADC32T3 = {							DataSource = DDB1       Type = int16    Alias = ADCinputsT3 Ranges = {{31,31}} }
            	ADC32T4 = {							DataSource = DDB1       Type = int16    Alias = ADCinputsT4 Ranges = {{31,31}} }
*/            
            
            } 
            OutputSignals = {
                Counter = {							DataSource = MDSWriter	Type = uint32 } 
                State1_Thread1_CycleTime = {		DataSource = MDSWriter	Type = uint32 }
                State1_Thread2_CycleTime = {		DataSource = MDSWriter	Type = uint32 }
                State1_Thread3_CycleTime = {		DataSource = MDSWriter	Type = uint32 }
                State1_Thread4_CycleTime = {		DataSource = MDSWriter	Type = uint32 }                
                DiffCounter = {						DataSource = MDSWriter  Type = uint32 }
                ADC1T1 = { 							DataSource = MDSWriter  Type = int16 }
                ADC1T2 = {							DataSource = MDSWriter	Type = int16 }
                ADC1T3 = { 							DataSource = MDSWriter  Type = int16 }
                ADC1T4 = {							DataSource = MDSWriter	Type = int16 }                
                ADC32T1 = { 						DataSource = MDSWriter  Type = int16 }
                ADC32T2 = {							DataSource = MDSWriter	Type = int16 }
                ADC32T3 = { 						DataSource = MDSWriter  Type = int16 }
                ADC32T4 = {							DataSource = MDSWriter	Type = int16 }                


			}
        }
    }
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB1
        +DDB1 = {
            Class = GAMDataSource
       	}        
        +LoggerDataSource = {
            Class = LoggerDataSource
        }
        +Timings = {
            Class = TimingDataSource
        }
        +RTThreadSynch = {
            Class = RealTimeThreadSynchronisation
            Timeout = 60000 //Timeout in ms to wait for the thread to cycle.
        	//Timeout = 0
        }
        +RTThreadSynch2 = {
            Class = RealTimeThreadSynchronisation
            Timeout = 60000 //Timeout in ms to wait for the thread to cycle.
        	//Timeout = 0
        }        
        +AFHBA404 = {
 	    	Class = AFHBA404
			Personality = ACQ2106N02IN // TCV SCD node 02 input adc
			Device = 0 // Userspace device entry to be opened
			// TODO: IndependentThread isn't working, thread semaphore not handled by Execute, to be fixed
			ExecutionMode = RealTimeThread //Optional. If not set ExecutionMode = IndependentThread. If ExecutionMode == IndependentThread a thread is spawned to generate the time events. ExecutionMode == RealTimeThread the time is generated in the context of the real-time thread.
			//CPUMask = 0x8 //Optional and only relevant if ExecutionMode=IndependentThread
     		Signals = {
         		Counter = { // the sample counter maintained by the ADC subsystem
             		Type = uint32
         		}
         		Time = {    // the realtime maintained by the ADC subsystem, units [us]
             		Type = uint32
             		Frequency = 1000
         		}
         		ADCinputs = { // ADC inputs vector
             		Type = int16
             		NumberOfElements = 192
         		}
         	}
     	}
                
        +MDSWriter = {
        	Class = MDSWriter::MDSWriter
			NumberOfBuffers = 10000
        	CPUMask = 0x02
        	StackSize = 10000000
        	TreeName = "acq2106_076"
        	
        	StoreOnTrigger = 0
        	PulseNumber = 20
        	EventName = "updatejScope"
        	TimeRefresh = 5
        	NumberOfPreTriggers = 100
			NumberOfPostTriggers = 100

			Signals = {
				Counter = 						{ NodeName = "ST.CH01" Period = 1 MakeSegmentAfterNWrites = 25000 AutomaticSegmentation = 0 }
				DiffCounter = 					{ NodeName = "ST.CH02" Period = 1 MakeSegmentAfterNWrites = 25000 AutomaticSegmentation = 0 }
        		State1_Thread1_CycleTime = 		{ NodeName = "ST.CH03" Period = 1 MakeSegmentAfterNWrites = 25000 AutomaticSegmentation = 0 Type = "uint32" }
        		State1_Thread2_CycleTime = 		{ NodeName = "ST.CH04" Period = 1 MakeSegmentAfterNWrites = 25000 AutomaticSegmentation = 0 Type = "uint32" }
        		State1_Thread3_CycleTime = 		{ NodeName = "ST.CH05" Period = 1 MakeSegmentAfterNWrites = 25000 AutomaticSegmentation = 0 Type = "uint32" }
        		State1_Thread4_CycleTime = 		{ NodeName = "ST.CH06" Period = 1 MakeSegmentAfterNWrites = 25000 AutomaticSegmentation = 0 Type = "uint32" }
        		ADC1T1 = 						{ NodeName = "ST.CH10" Period = 1 MakeSegmentAfterNWrites = 25000 AutomaticSegmentation = 0 Type = "int16" }
        		ADC1T2 = 						{ NodeName = "ST.CH11" Period = 1 MakeSegmentAfterNWrites = 25000 AutomaticSegmentation = 0 Type = "int16" }
        		ADC1T3 = 						{ NodeName = "ST.CH12" Period = 1 MakeSegmentAfterNWrites = 25000 AutomaticSegmentation = 0 Type = "int16" }
        		ADC1T4 = 						{ NodeName = "ST.CH13" Period = 1 MakeSegmentAfterNWrites = 25000 AutomaticSegmentation = 0 Type = "int16" }
        		ADC32T1 = 						{ NodeName = "ST.CH14" Period = 1 MakeSegmentAfterNWrites = 25000 AutomaticSegmentation = 0 Type = "int16" }
        		ADC32T2 = 						{ NodeName = "ST.CH15" Period = 1 MakeSegmentAfterNWrites = 25000 AutomaticSegmentation = 0 Type = "int16" }
        		ADC32T3 = 						{ NodeName = "ST.CH16" Period = 1 MakeSegmentAfterNWrites = 25000 AutomaticSegmentation = 0 Type = "int16" }
        		ADC32T4 = 						{ NodeName = "ST.CH17" Period = 1 MakeSegmentAfterNWrites = 25000 AutomaticSegmentation = 0 Type = "int16" }
        	}
        }                
     
    }
    +States = {
        Class = ReferenceContainer
        +State1 = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = { Class = RealTimeThread CPUs = 0x4  Functions = {GAMInput GAMFixed1 GAMT1TSynchOut MDSBroker } }
                +Thread2 = { Class = RealTimeThread CPUs = 0x8  Functions = {GAMT1T2Interface GAMT2TSynchOut} }
                +Thread3 = { Class = RealTimeThread CPUs = 0x10 Functions = {GAMT2T3Interface} }
                +Thread4 = { Class = RealTimeThread CPUs = 0x20 Functions = {GAMT2T4Interface} }
            }
        }
                    
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}
