/*
 ESDEtherCAT master tester 
 CGalperti 06.11.2019

 - 1 thread, LinuxTimer timing 
 - ESDEtherCATMaster 
 - MDSWriter for test monitoring
*/

$RTApp = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer
        +GAMTimer = {
            Class = IOGAM
            InputSignals = {
                Counter = {               		DataSource = Timer Type = uint32 }                
                Time    = { Frequency = 10000     	DataSource = Timer Type = int32 }
            }
            OutputSignals = {
                Counter = {               		DataSource = DDB1  Type = uint32 }                
                Time =    {               		DataSource = DDB1  Type = int32 }            
            }
        }
       
        +TestSignals1 = {
        	Class = HelperGAM1
        	        	
        	MdsTimeOffset = 0
        	MdsStartTime = -4495000
        	MdsStopTime = 3950000
        	
        	InputSignals = { 
        		Time  = 		{ DataSource = DDB1     Type = int32 }
        	}
        	OutputSignals = {
				realtime			= { DataSource = DDB1 Type = float32  NumberOfElements = 1   }   	
            	adc  				= { DataSource = DDB1 Type = int16    NumberOfElements = 192 }
				rfm_in_dummy      	= { DataSource = DDB1 Type = uint8    NumberOfElements = 664 }
				wavegen     		= { DataSource = DDB1 Type = float32  NumberOfElements = 62  }
				proc_in     		= { DataSource = DDB1 Type = float32  NumberOfElements = 3  }
				offsettimeforMDS	= { DataSource = DDB1 Type = int32 	  NumberOfElements = 1 }
		  		triggerforMDS 		= { DataSource = DDB1 Type = uint8    NumberOfElements = 1 }
                DOs 				= { DataSource = DDB1 Type = uint8    NumberOfElements = 4 }
                PWMduty 			= { DataSource = DDB1 Type = uint16   NumberOfElements = 8 } 
        	}
        }
        
    	+EtherCATInputBroker = {
    	 Class = IOGAM
    	 InputSignals = {
    	  GoodCyclesCounter = { DataSource = ETHCAT1 Type = uint32 }
    	 
    	  Input1 = {  DataSource = ETHCAT1 Type = int16    }
    	  Input2 = {  DataSource = ETHCAT1 Type = int16    }
    	  Input3 = {  DataSource = ETHCAT1 Type = int16    }
    	  Input4 = {  DataSource = ETHCAT1 Type = int16    }
    	  Input5 = {  DataSource = ETHCAT1 Type = int16    }
    	  Input6 = {  DataSource = ETHCAT1 Type = int16    }
    	  Input7 = {  DataSource = ETHCAT1 Type = int16    }
    	  Input8 = {  DataSource = ETHCAT1 Type = int16    }
    	  Input9 = {  DataSource = ETHCAT1 Type = int16    }
    	  Input10 = {  DataSource = ETHCAT1 Type = int16    }
    	  Input11 = {  DataSource = ETHCAT1 Type = int16    }
    	  Input12 = {  DataSource = ETHCAT1 Type = int16    }
    	  Input13 = {  DataSource = ETHCAT1 Type = int16    }
    	  Input14 = {  DataSource = ETHCAT1 Type = int16    }
    	  Input15 = {  DataSource = ETHCAT1 Type = int16    }
    	  Input16 = {  DataSource = ETHCAT1 Type = int16    }
    	  Input17 = {  DataSource = ETHCAT1 Type = int16    }
    	  Input18 = {  DataSource = ETHCAT1 Type = int16    }
    	  Input19 = {  DataSource = ETHCAT1 Type = int16    }
    	  Input20 = {  DataSource = ETHCAT1 Type = int16    }
    	  
    	  Input21 = {  DataSource = ETHCAT1 Type = float32    }
    	  Input22 = {  DataSource = ETHCAT1 Type = float32    }
    	  Input23 = {  DataSource = ETHCAT1 Type = float32    }
    	  Input24 = {  DataSource = ETHCAT1 Type = float32    }
    	  Input25 = {  DataSource = ETHCAT1 Type = float32    }
    	  Input26 = {  DataSource = ETHCAT1 Type = float32    }
    	  Input27 = {  DataSource = ETHCAT1 Type = float32    }
    	  Input28 = {  DataSource = ETHCAT1 Type = float32    }
    	  Input29 = {  DataSource = ETHCAT1 Type = float32    }
    	  Input30 = {  DataSource = ETHCAT1 Type = float32    }
    	 }
    	 OutputSignals = {
    	  ETHCATCycles = { DataSource = DDB1 Type = uint32    }
    	  ETHCATInput1 = {  DataSource = DDB1 Type = int16    }
    	  ETHCATInputI = {  DataSource = DDB1 Type = int16  NumberOfElements = 19  }
          ETHCATInput2 = {  DataSource = DDB1 Type = float32  }
          ETHCATInputF = {  DataSource = DDB1 Type = float32 NumberOfElements = 9 }
    	 }
    	}
    	
    	
    	+EtherCATOutputBroker = {
    	 Class = IOGAM
    	 InputSignals = {
    	 
    	 
    	  Counter1 = {               		DataSource = DDB1  Type = uint32 Alias = Counter }
    	  Counter2 = {               		DataSource = DDB1  Type = uint32 Alias = Counter }
    	  Counter3 = {               		DataSource = DDB1  Type = uint32 Alias = Counter }
    	  Counter4 = {               		DataSource = DDB1  Type = uint32 Alias = Counter }
    	  Counter5 = {               		DataSource = DDB1  Type = uint32 Alias = Counter }
    	  Counter6 = {               		DataSource = DDB1  Type = uint32 Alias = Counter }
    	  Counter7 = {               		DataSource = DDB1  Type = uint32 Alias = Counter }
    	  Counter8 = {               		DataSource = DDB1  Type = uint32 Alias = Counter }
    	  Counter9 = {               		DataSource = DDB1  Type = uint32 Alias = Counter }
    	  Counter10 = {               		DataSource = DDB1  Type = uint32 Alias = Counter }

    	     	  
    	  realtime1 = 	{                      DataSource = DDB1  Type = float32 Alias = realtime }
    	  realtime2 =   {                      DataSource = DDB1  Type = float32 Alias = realtime }
    	  realtime3 =   {                      DataSource = DDB1  Type = float32 Alias = realtime }
    	  realtime4 =   {                      DataSource = DDB1  Type = float32 Alias = realtime }
    	  realtime5 =   {                      DataSource = DDB1  Type = float32 Alias = realtime }
    	  realtime6 =   {                      DataSource = DDB1  Type = float32 Alias = realtime }
    	  realtime7 =   {                      DataSource = DDB1  Type = float32 Alias = realtime }
    	  realtime8 =   {                      DataSource = DDB1  Type = float32 Alias = realtime }
    	  realtime9 =   {                      DataSource = DDB1  Type = float32 Alias = realtime }
    	  realtime10 =   {                      DataSource = DDB1  Type = float32 Alias = realtime }
    	 }
    	 
    	 OutputSignals = {
    	  Output1 = {                       DataSource = ETHCAT1 Type = int16 }
    	  Output2 = {                       DataSource = ETHCAT1 Type = int16 }
    	  Output3 = {                       DataSource = ETHCAT1 Type = int16 }
    	  Output4 = {                       DataSource = ETHCAT1 Type = int16 }
    	  Output5 = {                       DataSource = ETHCAT1 Type = int16 }
    	  Output6 = {                       DataSource = ETHCAT1 Type = int16 }
    	  Output7 = {                       DataSource = ETHCAT1 Type = int16 }
    	  Output8 = {                       DataSource = ETHCAT1 Type = int16 }
    	  Output9 = {                       DataSource = ETHCAT1 Type = int16 }
    	  Output10 = {                       DataSource = ETHCAT1 Type = int16 }
    	  Output11 = {                       DataSource = ETHCAT1 Type = int16 }
    	  Output12 = {                       DataSource = ETHCAT1 Type = int16 }
    	  Output13 = {                       DataSource = ETHCAT1 Type = int16 }
    	  Output14 = {                       DataSource = ETHCAT1 Type = int16 }
    	  Output15 = {                       DataSource = ETHCAT1 Type = int16 }
    	  Output16 = {                       DataSource = ETHCAT1 Type = int16 }
    	  Output17 = {                       DataSource = ETHCAT1 Type = int16 }
    	  Output18 = {                       DataSource = ETHCAT1 Type = int16 }
    	  Output19 = {                       DataSource = ETHCAT1 Type = int16 }
    	  Output20 = {                       DataSource = ETHCAT1 Type = int16 }
    	 
    	  Output21 = {                       DataSource = ETHCAT1 Type = float32 }
    	  Output22 = {                       DataSource = ETHCAT1 Type = float32 }
    	  Output23 = {                       DataSource = ETHCAT1 Type = float32 }
    	  Output24 = {                       DataSource = ETHCAT1 Type = float32 }
    	  Output25 = {                       DataSource = ETHCAT1 Type = float32 }
    	  Output26 = {                       DataSource = ETHCAT1 Type = float32 }
    	  Output27 = {                       DataSource = ETHCAT1 Type = float32 }
    	  Output28 = {                       DataSource = ETHCAT1 Type = float32 }
    	  Output29 = {                       DataSource = ETHCAT1 Type = float32 }
    	  Output30 = {                       DataSource = ETHCAT1 Type = float32 }  	  
    	 }
    	}

        +LoggerBroker = {
		 Class = IOGAM
		 InputSignals = {
		 	//Counter = 		{ DataSource = DDB1 Type = uint32 }
    	    realtime = 		{ DataSource = DDB1  Type = float32 }
    	  	ETHCATInput1 = {  DataSource = DDB1 Type = int16    }
          	ETHCATInput2 = {  DataSource = DDB1 Type = float32  }
		 }
		 OutputSignals = {
		    //ETHCATOutput1 = 		{ DataSource = LoggerDataSource Type = uint32 }
		    ETHCATOutput2 = 		{ DataSource = LoggerDataSource Type = float32 }
    	  	ETHCATInput1 = {  DataSource = LoggerDataSource Type = int16   }
          	ETHCATInput2 = {  DataSource = LoggerDataSource Type = float32  }		    
		 }
        } 
    	
    	+TimingSignalsBroker = {
         Class = IOGAM
         InputSignals = { 
         	Thread1_CycleTime    			= { DataSource = Timings Type = uint32 Alias = Run.Thread1_CycleTime }
	        GAMTimer_ExecTime    			= { DataSource = Timings Type = uint32 } 
			EtherCATInputBroker_ReadTime    = { DataSource = Timings Type = uint32 } 
			EtherCATInputBroker_ExecTime    = { DataSource = Timings Type = uint32 } 
			EtherCATOutputBroker_ExecTime   = { DataSource = Timings Type = uint32 } 
			EtherCATOutputBroker_WriteTime  = { DataSource = Timings Type = uint32 } 
    	 }
    	 OutputSignals = { 
         	Thread1_CycleTime    			= { DataSource = DDB1 Type = uint32 }     
	        GAMTimer_ExecTime    			= { DataSource = DDB1 Type = uint32 } 
			EtherCATInputBroker_ReadTime    = { DataSource = DDB1 Type = uint32 } 
			EtherCATInputBroker_ExecTime    = { DataSource = DDB1 Type = uint32 } 	        
			EtherCATOutputBroker_ExecTime   = { DataSource = DDB1 Type = uint32 } 
			EtherCATOutputBroker_WriteTime  = { DataSource = DDB1 Type = uint32 } 	        
	     }
	    }    
    	 
    	+StorageBroker1 = {
		 Class = IOGAM
		 InputSignals = {	  
		  //triggerforMDS = { DataSource = DDB1 Type = uint8 }
		  //offsettimeforMDS = { DataSource = DDB1 Type = int32 } 
          
         	Thread1_CycleTime    			= { DataSource = DDB1 Type = uint32 }     
	        GAMTimer_ExecTime    			= { DataSource = DDB1 Type = uint32 } 
			EtherCATInputBroker_ReadTime    = { DataSource = DDB1 Type = uint32 } 
			EtherCATInputBroker_ExecTime    = { DataSource = DDB1 Type = uint32 } 	        
			EtherCATOutputBroker_ExecTime   = { DataSource = DDB1 Type = uint32 } 
			EtherCATOutputBroker_WriteTime  = { DataSource = DDB1 Type = uint32 } 	        	

   	  		Counter1 = {               		DataSource = DDB1  Type = uint32 Alias = Counter }		 
		    ETHCATInput1 = {  DataSource = DDB1 Type = int16    }
		    ETHCATInput2 = {  DataSource = DDB1 Type = float32    }
		    ETHCATCycles = {  DataSource = DDB1 Type = uint32 } 
		 
		 }
		 OutputSignals = {
		  //Trigger = { DataSource = MDSWriter Type = uint8 }
		  //Time = { DataSource = MDSWriter Type = int32 }

         	Thread1_CycleTime    			= { DataSource = MDSWriter Type = uint32 }     
	        GAMTimer_ExecTime    			= { DataSource = MDSWriter Type = uint32 } 
			EtherCATInputBroker_ReadTime    = { DataSource = MDSWriter Type = uint32 } 
			EtherCATInputBroker_ExecTime    = { DataSource = MDSWriter Type = uint32 } 	        
			EtherCATOutputBroker_ExecTime   = { DataSource = MDSWriter Type = uint32 } 
			EtherCATOutputBroker_WriteTime  = { DataSource = MDSWriter Type = uint32 } 	        	        
		 
   	  		Counter1 = 		{  DataSource = MDSWriter  Type = uint32 }		 
		    ETHCATInput1 = 	{  DataSource = MDSWriter Type = int16    }
		    ETHCATInput2 = {  DataSource = MDSWriter Type = float32    }		
		    ETHCATCycles = {  DataSource = MDSWriter Type = uint32 }   
		 
		 }
		}
	
		
    }
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB1
        +DDB1 = {
            Class = GAMDataSource
       	}        
        +LoggerDataSource = {
            Class = LoggerDataSource
        }
                
        +Timings = {
            Class = TimingDataSource
        }
        
        +Timer = {
            Class = LinuxTimer
            //Class = LinuxTimer::TerminatorLinuxTimer
            SleepNature = "Busy"
            //SleepNature = "Default"
            //ExecutionMode = RealTimeThread
            ExecutionMode = IndependentThread
            CPUMask = 0x04
            //IncrementsPerCycle = 100 // If not defined it is taken from the configured Timer frequency
            //StartTime=-1.0 // If not set starttime is 0
            //StopTime=4.0 // If not set runs indefinitely
            
            SkipTimer=0 // If 1 runs at maximum possible speed w/o using any timer at all 
            Signals = { 
                Counter = { Type = uint32 }
                Time = { Type = int32 }
            }
            //+TermMessage1 = { Class=Message Destination=StateMachine Function=RUNCOMPLETE }
            //+TermMessage2 = { Class=Message Destination=RTApp Function=StopCurrentStateExecution }
        }
        
        +ETHCAT1 = {
 	    	Class = ESDEtherCATMaster
 			ENIcfgfile = "/home/dt100/ethercateni/EL6695-testfull2.xml" // The ENI (EtherCAT Network Information) xml file, see node (1)
 			NICNumber = 2
 			NominalCycleTime = 100
 			ProcImageSize = 32000 // Size in bytes of the input and the output process images
      		PrintTOPDesc = 1 // Outputs top device and master descriptions to logger
      		PrintVersion = 1 // Outputs master version info to logger
      		PrintNICList = 1 // Outputs Network Interface Cards list to logger
      		PrintSlaveList = 0 // Outputs the list of configured slaves
      		PrintVarList = 0 // Outputs master process variable list to logger
      		PrintESCList = 0 // Outputs EtherCAT Slave Controller list info to logger
			AcyclicThreadEn = 1 // Enables the handling of acyclic messaged on an independent thread, see node (2)

 			Signals = {

				GoodCyclesCounter = { Type = uint32 NumberOfElements = 1 }


				Input1  = { ENIName = "EL6695.IO Inputs.IIN1" 	Type = int16 Direction = Input }
				Input2  = { ENIName = "EL6695.IO Inputs.IIN2" 	Type = int16 Direction = Input }
				Input3  = { ENIName = "EL6695.IO Inputs.IIN3" 	Type = int16 Direction = Input }
				Input4  = { ENIName = "EL6695.IO Inputs.IIN4" 	Type = int16 Direction = Input }
				Input5  = { ENIName = "EL6695.IO Inputs.IIN5" 	Type = int16 Direction = Input }
				Input6  = { ENIName = "EL6695.IO Inputs.IIN6" 	Type = int16 Direction = Input }
				Input7  = { ENIName = "EL6695.IO Inputs.IIN7" 	Type = int16 Direction = Input }
				Input8  = { ENIName = "EL6695.IO Inputs.IIN8" 	Type = int16 Direction = Input }
				Input9  = { ENIName = "EL6695.IO Inputs.IIN9" 	Type = int16 Direction = Input }
				Input10 = { ENIName = "EL6695.IO Inputs.IIN10" 	Type = int16 Direction = Input }
				Input11 = { ENIName = "EL6695.IO Inputs.IIN11" 	Type = int16 Direction = Input }
				Input12 = { ENIName = "EL6695.IO Inputs.IIN12" 	Type = int16 Direction = Input }
				Input13 = { ENIName = "EL6695.IO Inputs.IIN13" 	Type = int16 Direction = Input }
				Input14 = { ENIName = "EL6695.IO Inputs.IIN14" 	Type = int16 Direction = Input }
				Input15 = { ENIName = "EL6695.IO Inputs.IIN15" 	Type = int16 Direction = Input }
				Input16 = { ENIName = "EL6695.IO Inputs.IIN16" 	Type = int16 Direction = Input }
				Input17 = { ENIName = "EL6695.IO Inputs.IIN17" 	Type = int16 Direction = Input }
				Input18 = { ENIName = "EL6695.IO Inputs.IIN18" 	Type = int16 Direction = Input }
				Input19 = { ENIName = "EL6695.IO Inputs.IIN19" 	Type = int16 Direction = Input }
				Input20 = { ENIName = "EL6695.IO Inputs.IIN20" 	Type = int16 Direction = Input }

				Input21  = { ENIName = "EL6695.IO Inputs.RIN1" 	Type = float32 Direction = Input }
				Input22  = { ENIName = "EL6695.IO Inputs.RIN2" 	Type = float32 Direction = Input }
				Input23  = { ENIName = "EL6695.IO Inputs.RIN3" 	Type = float32 Direction = Input }
				Input24  = { ENIName = "EL6695.IO Inputs.RIN4" 	Type = float32 Direction = Input }
				Input25  = { ENIName = "EL6695.IO Inputs.RIN5" 	Type = float32 Direction = Input }
				Input26  = { ENIName = "EL6695.IO Inputs.RIN6" 	Type = float32 Direction = Input }
				Input27  = { ENIName = "EL6695.IO Inputs.RIN7" 	Type = float32 Direction = Input }
				Input28  = { ENIName = "EL6695.IO Inputs.RIN8" 	Type = float32 Direction = Input }
				Input29  = { ENIName = "EL6695.IO Inputs.RIN9" 	Type = float32 Direction = Input }
				Input30 = { ENIName = "EL6695.IO Inputs.RIN10" 	Type = float32 Direction = Input }

				Output1  = { ENIName = "EL6695.IO Outputs.IOUT1" 	Type = int16 Direction = Output }
				Output2  = { ENIName = "EL6695.IO Outputs.IOUT2" 	Type = int16 Direction = Output }
				Output3  = { ENIName = "EL6695.IO Outputs.IOUT3" 	Type = int16 Direction = Output }
				Output4  = { ENIName = "EL6695.IO Outputs.IOUT4" 	Type = int16 Direction = Output }
				Output5  = { ENIName = "EL6695.IO Outputs.IOUT5" 	Type = int16 Direction = Output }
				Output6  = { ENIName = "EL6695.IO Outputs.IOUT6" 	Type = int16 Direction = Output }
				Output7  = { ENIName = "EL6695.IO Outputs.IOUT7" 	Type = int16 Direction = Output }
				Output8  = { ENIName = "EL6695.IO Outputs.IOUT8" 	Type = int16 Direction = Output }
				Output9  = { ENIName = "EL6695.IO Outputs.IOUT9" 	Type = int16 Direction = Output }
				Output10 = { ENIName = "EL6695.IO Outputs.IOUT10" 	Type = int16 Direction = Output }
				Output11 = { ENIName = "EL6695.IO Outputs.IOUT11" 	Type = int16 Direction = Output }
				Output12 = { ENIName = "EL6695.IO Outputs.IOUT12" 	Type = int16 Direction = Output }
				Output13 = { ENIName = "EL6695.IO Outputs.IOUT13" 	Type = int16 Direction = Output }
				Output14 = { ENIName = "EL6695.IO Outputs.IOUT14" 	Type = int16 Direction = Output }
				Output15 = { ENIName = "EL6695.IO Outputs.IOUT15" 	Type = int16 Direction = Output }
				Output16 = { ENIName = "EL6695.IO Outputs.IOUT16" 	Type = int16 Direction = Output }
				Output17 = { ENIName = "EL6695.IO Outputs.IOUT17" 	Type = int16 Direction = Output }
				Output18 = { ENIName = "EL6695.IO Outputs.IOUT18" 	Type = int16 Direction = Output }
				Output19 = { ENIName = "EL6695.IO Outputs.IOUT19" 	Type = int16 Direction = Output }
				Output20 = { ENIName = "EL6695.IO Outputs.IOUT20" 	Type = int16 Direction = Output }
          		          		
          		Output21   = { ENIName = "EL6695.IO Outputs.ROUT1"  Type = float32   Direction = Output }
          		Output22   = { ENIName = "EL6695.IO Outputs.ROUT2"  Type = float32   Direction = Output }
          		Output23   = { ENIName = "EL6695.IO Outputs.ROUT3"  Type = float32   Direction = Output }
          		Output24   = { ENIName = "EL6695.IO Outputs.ROUT4"  Type = float32   Direction = Output }
          		Output25   = { ENIName = "EL6695.IO Outputs.ROUT5"  Type = float32   Direction = Output }
          		Output26   = { ENIName = "EL6695.IO Outputs.ROUT6"  Type = float32   Direction = Output }
          		Output27   = { ENIName = "EL6695.IO Outputs.ROUT7"  Type = float32   Direction = Output }
          		Output28   = { ENIName = "EL6695.IO Outputs.ROUT8"  Type = float32   Direction = Output }
          		Output29   = { ENIName = "EL6695.IO Outputs.ROUT9"  Type = float32   Direction = Output }
          		Output30  = { ENIName = "EL6695.IO Outputs.ROUT10"  Type = float32   Direction = Output }

      		}
        }
     
        +MDSWriter = {
        	Class = MDSWriter
			NumberOfBuffers = 100000
        	CPUMask = 0x10
        	StackSize = 10000000
        	TreeName = "martetest"
        	StoreOnTrigger = 0
        	Verbosity = 0
        
        	// New shot requested
        	PulseNumber = -1          	
          	// Current shot
          	//PulseNumber = 0
            // Fixed shot
          	//PulseNumber = 10
          		
        	EventName = "updatejScope"
        	TimeRefresh = 5
        	NumberOfPreTriggers = 1
			NumberOfPostTriggers = 1


			Signals = {
				//Trigger = { Type = uint8 }	
			    //Time    = { Type = int32 TimeSignal = 1 TimeSignalMultiplier = 1e-6 }
  
           		Thread1_CycleTime    			= { NodeName = "ST.CH01"  					Period = 0.0001  MakeSegmentAfterNWrites = 100000 AutomaticSegmentation = 0 NumberOfElements = 1 SamplePhase = 0 }     
	        	GAMTimer_ExecTime    			= { NodeName = "ST.CH02"  					Period = 0.0001  MakeSegmentAfterNWrites = 100000 AutomaticSegmentation = 0 NumberOfElements = 1 SamplePhase = 0 }      
				EtherCATInputBroker_ReadTime    = { NodeName = "ST.CH03"  					Period = 0.0001  MakeSegmentAfterNWrites = 100000 AutomaticSegmentation = 0 NumberOfElements = 1 SamplePhase = 0 }      
				EtherCATInputBroker_ExecTime    = { NodeName = "ST.CH04"  					Period = 0.0001  MakeSegmentAfterNWrites = 100000 AutomaticSegmentation = 0 NumberOfElements = 1 SamplePhase = 0 }      	        
				EtherCATOutputBroker_ExecTime   = { NodeName = "ST.CH05"  					Period = 0.0001  MakeSegmentAfterNWrites = 100000 AutomaticSegmentation = 0 NumberOfElements = 1 SamplePhase = 0 }      
				EtherCATOutputBroker_WriteTime  = { NodeName = "ST.CH06"  					Period = 0.0001  MakeSegmentAfterNWrites = 100000 AutomaticSegmentation = 0 NumberOfElements = 1 SamplePhase = 0 }      	       

   	  			Counter1 = 		{ NodeName = "ST.CH10"  					Period = 0.0001  MakeSegmentAfterNWrites = 100000 AutomaticSegmentation = 0 NumberOfElements = 1 SamplePhase = 0 }		 
		    	ETHCATInput1 = 	{  NodeName = "ST.CH11"  					Period = 0.0001  MakeSegmentAfterNWrites = 100000 AutomaticSegmentation = 0 NumberOfElements = 1 SamplePhase = 0    }
		    	ETHCATInput2 = 	{  NodeName = "ST.CH12"  					Period = 0.0001  MakeSegmentAfterNWrites = 100000 AutomaticSegmentation = 0 NumberOfElements = 1 SamplePhase = 0    }
				ETHCATCycles =  {  NodeName = "ST.CH13"  					Period = 0.0001  MakeSegmentAfterNWrites = 100000 AutomaticSegmentation = 0 NumberOfElements = 1 SamplePhase = 0    }
      
        	}
        	+TreeFlushedMsg = { Class = Message Destination = ShotManager Function = TreeFlushed Mode = ExpectsReply }
        }                
                
    }
    +States = {
        Class = ReferenceContainer
        +Run = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread CPUs = 0x2 
                    Functions = {
                     GAMTimer 
                     TestSignals1
                     EtherCATInputBroker
                     EtherCATOutputBroker
                     //LoggerBroker 
                     StorageBroker1
                     TimingSignalsBroker
                    }
                }
            }
        }        
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}
