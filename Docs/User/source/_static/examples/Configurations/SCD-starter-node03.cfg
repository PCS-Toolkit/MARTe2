/*
 TCV SCD MARTe2 cfg file
 SPCShotStarter for node 03
 CGalperti 11.02.2020

 - TCP server for receiving messages
 - SPCShotStarter 
 - LoggerService
 
 Brief explanation:
 This is a always running MARTe process which
 stays in the not RT processors.
 It sets up a TCP/IP server listening for MARTe
 messages.
 Upon reception of the INIT message with ShotStarter
 destination, the latter begins a RT MARTe process.
 This standardizes the SCD control interface
 from scd.epfl.ch to the RT machines and, more importantly,
 removes the need to share root keys between 
 the RT nodes and scd.epfl.ch. 
 
 Changelog: 
*/

+ShotStarter = {
 Class = SPCShotStarter
 Server = tcvscd.crpp.tcv
 Tree = rtc
 Shot = 0
 Cfgnode = NODE03.PARAMS.CFG_FILE
 Startcommandline = "/root/scd/MARTeApp.sh -l SPCRealTimeLoader -f /root/scd/configurations/%s  -m ShotManager:Start"
}

+TCPMessageProxy = {
    Class = TCPSocketMessageProxyExample
    Port = 24681
}

+LoggerService = {
      Class = LoggerService
      CPUs = 0x1 //Compulsory. The CPU mask where the asynchronous thread will run.
      StackSize = 32768 //Optional. The stack size of the asynchronous thread.
      NumberOfLogPages = 128 //Optional. The number of log pages.
	  +SysLogger = {
       Class = SysLogger
       Format = EFm //Compulsory. As described in LoggerConsumerI::LoadPrintPreferences
       PrintKeys = 0 //Optional. As described in LoggerConsumerI::LoadPrintPreferences
       Ident = SCDStarter //Compulsory. Name of the syslog ident.
      }
      //+ConsoleLogger = {
      // Class = ConsoleLogger
      // //Format = ETtOofFRmC //Compulsory. As described in LoggerConsumerI::LoadPrintPreferences
      // Format = EFm //Compulsory. As described in LoggerConsumerI::LoadPrintPreferences
      // PrintKeys = 0 //Optional. As described in LoggerConsumerI::LoadPrintPreferences
      //}
      //+UDPLogger = {
      // Class = UDPLogger
      // Address = "127.0.0.1" //Compulsory. The address of the destination where the logs are to be sent to.
      // Port = 44444 //Compulsory. The port of the destination where the logs are to be sent to.
      // Format = EFm //Compulsory. As described in LoggerConsumerI::LoadPrintPreferences
      // PrintKeys = 0 //Optional. As described in LoggerConsumerI::LoadPrintPreferences
      //}
}
