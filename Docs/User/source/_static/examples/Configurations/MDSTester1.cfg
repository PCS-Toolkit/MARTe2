$TestApp = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer
        +GAMTimer = {
            Class = IOGAM
            InputSignals = {
                Counter = { 			   DataSource = Timer Type = uint32 }
                Time =    { Frequency = 1  DataSource = Timer Type = uint32 }
            }
            OutputSignals = {
                Counter = {
                    DataSource = DDB1
                    Type = uint32
                }                
                Time = {
                    DataSource = DDB1
                    Type = uint32
                }            
            }
        }
        +GAMFixed1 = {
            Class = FixedGAMExample1
            Gain = 2
            InputSignals = {
                Counter = {
                    DataSource = DDB1
                    Type = uint32
                }
            }
            OutputSignals = {
                GainCounter = {
                    DataSource = DDB1
                    Type = uint32
                }                
            }
        }
        +GAMDisplay = {
            Class = IOGAM            
            InputSignals = {
                Counter = {
                    DataSource = DDB1
                    Type = uint32
                }
                GainCounter = {
                    DataSource = DDB1
                    Type = uint32
                }
                State1_Thread1_CycleTime = {
                    Alias = State1.Thread1_CycleTime
                    DataSource = Timings
                    Type = uint32
                }
                GAMTimer_ReadTime = {
                    DataSource = Timings
                    Type = uint32
                }
                GAMTimer_ExecTime = {
                    DataSource = Timings
                    Type = uint32
                }
                GAMTimer_WriteTime = {
                    DataSource = Timings
                    Type = uint32
                }
                GAMFixed1_ReadTime = {
                    DataSource = Timings
                    Type = uint32
                }
                GAMFixed1_ExecTime = {
                    DataSource = Timings
                    Type = uint32
                }
                GAMFixed1_WriteTime = {
                    DataSource = Timings
                    Type = uint32
                }
            } 
            OutputSignals = {
                Counter = {
                    DataSource = LoggerDataSource
                    Type = uint32
                }
                GainCounter = {
                    DataSource = LoggerDataSource
                    Type = uint32
                }
                State1_Thread1_CycleTime = {
                    DataSource = LoggerDataSource
                    Type = uint32
                }
                GAMTimer_ReadTime = {
                    DataSource = LoggerDataSource
                    Type = uint32
                }
                GAMTimer_ExecTime = {
                    DataSource = LoggerDataSource
                    Type = uint32
                }
                GAMTimer_WriteTime = {
                    DataSource = LoggerDataSource
                    Type = uint32
                }
                GAMFixed1_ReadTime = {
                    DataSource = LoggerDataSource
                    Type = uint32
                }
                GAMFixed1_ExecTime = {
                    DataSource = LoggerDataSource
                    Type = uint32
                }
                GAMFixed1_WriteTime = {
                    DataSource = LoggerDataSource
                    Type = uint32
                }
            }
        }
        +MDSBroker = {
            Class = IOGAM            
            InputSignals = {
                Counter = {
                    DataSource = DDB1
                    Type = uint32
                }
	            State1_Thread1_CycleTime = {
                    Alias = State1.Thread1_CycleTime
                    DataSource = Timings
                    Type = uint32
    	        }
            } 
            
            OutputSignals = {
                Counter = {
                    DataSource = MDSWriter
                    Type = uint32
                }
                State1_Thread1_CycleTime = {
                    DataSource = MDSWriter
                    Type = uint32                
                }
			}
        }
    }
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB1
        +DDB1 = {
            Class = GAMDataSource
       	}        
        +LoggerDataSource = {
            Class = LoggerDataSource
        }
        +Timings = {
            Class = TimingDataSource
        }
        +Timer = {

/*
 *     SleepNature = Busy|Default//If SleepNature is not specified then Default is set
 *     SleepPercentage = 0 //Only meaningful if SleepNature = Busy. The percentage of time to sleep using the OS sleep.
 *     ExecutionMode = IndependentThread //Optional. If not set ExecutionMode = IndependentThread. If ExecutionMode == IndependentThread a thread is spawned to generate the time events. ExecutionMode == RealTimeThread the time is generated in the context of the real-time thread.
 *     CPUMask = 0x8 //Optional and only relevant if ExecutionMode=IndependentThread
*/

            Class = LinuxTimer
            /*SleepNature = "Default"*/
            SleepNature = "Busy"
            SleepPercentage = 100
 			//ExecutionMode = IndependentThread
 			//CPUMask = 0x8
 
            Signals = {
                Counter = {
                    Type = uint32
                }
                Time = {
                    Type = uint32
                }
            }
        }
        +MDSWriter = {
        	Class = MDSWriter::MDSWriter
			NumberOfBuffers = 10000
        	CPUMask = 0x01
        	StackSize = 10000000
            //TreeName = "mds_falconf"
        	TreeName = "acq2106_076"
        	StoreOnTrigger = 0
        	PulseNumber = 20
        	EventName = "updatejScope"
        	TimeRefresh = 5
        	NumberOfPreTriggers = 100
			NumberOfPostTriggers = 100

			Signals = {
				Counter = {
        			//NodeName = "ADC0.FAST"
        			NodeName = "ST.CH01"
        			Period = 1
        			MakeSegmentAfterNWrites = 100
        			/*DecimatedNodeName = "ADC0.FSTD"*/
        			/*MinMaxResampleFactor = 1000*/
        			AutomaticSegmentation = 0
        		}
        		State1_Thread1_CycleTime = {
        		    Type = "uint32"
        		    //NodeName = "TIME"
        		    NodeName = "ST.CH02"
        			Period = 1
        			MakeSegmentAfterNWrites = 100
        			/*DecimatedNodeName = "ADC0.FSTD"*/
        			/*MinMaxResampleFactor = 1000*/
        			AutomaticSegmentation = 0        		
        		}
        		
        		
        	}
        }                
    }
    +States = {
        Class = ReferenceContainer
        +State1 = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x4
                    //Functions = {GAMTimer GAMFixed1 GAMDisplay MDSBroker }
                    Functions = {GAMTimer GAMFixed1 MDSBroker }                    
                }
            }
        }        
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}
